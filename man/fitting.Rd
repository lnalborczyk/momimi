% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting.R
\name{fitting}
\alias{fitting}
\title{Fitting the model}
\usage{
fitting(
  par,
  data,
  nsims = NULL,
  par_names = NULL,
  lower_bounds,
  upper_bounds,
  nstudies = 200,
  initial_pop_constraints = FALSE,
  error_function = c("g2", "rmse", "sse", "wsse", "ks"),
  model_version = c("TMM3", "TMM4", "PIM"),
  uncertainty = c("par_level", "func_level", "diffusion"),
  method = c("SANN", "GenSA", "pso", "DEoptim", "Nelder-Mead", "BFGS", "L-BFGS-B",
    "bobyqa", "nlminb", "all_methods", "optimParallel"),
  maxit = 100,
  verbose = TRUE
)
}
\arguments{
\item{par}{Numeric, vector of parameter values.}

\item{data}{Dataframe, data to be used for fitting the model.}

\item{nsims}{Numeric, number of studies to be simulated.}

\item{par_names}{Character, vector of parameter names.}

\item{lower_bounds}{Numeric, vector of lower bounds for parameters.}

\item{upper_bounds}{Numeric, vector of upper bounds for parameters.}

\item{nstudies}{Numeric, number of starting values in the LHS.}

\item{initial_pop_constraints}{Boolean, whether to use additional constraints when sampling initial parameter values.}

\item{error_function}{Character, error function to be used when fitting the model.}

\item{model_version}{Character, threshold modulation model ("TMM3" or "TMM4") or parallel inhibition model ("PIM").}

\item{uncertainty}{Numeric, indicates how noise is introduced in the system.}

\item{method}{Character, optimisation method (DEoptim seems to work best).}

\item{maxit}{Numeric, maximum number of iterations.}

\item{verbose}{Boolean, whether to print progress during fitting.}
}
\value{
The optimised parameter values and further convergence information.
}
\description{
Fitting the "threshold modulation model" (TMM) and the "parallel inhibition model" (PIM) of motor inhibition during motor imagery.
}
\examples{
\dontrun{
plausible "true" parameter values in the TMM (with 4 free parameters)
true_pars <- c(1.1, 0.5, 0.3, 1.25)

# simulating data using these parameter values
simulated_data <- simulating(
    nsims = 200,
    nsamples = 2000,
    true_pars = true_pars,
    action_mode = "imagined",
    model_version = "TMM4"
    )

# fitting the model
results <- fitting(
    data = simulated_data,
    nsims = 200,
    error_function = "g2",
    method = "DEoptim",
    model_version = "TMM4",
    lower_bounds = c(0, 0.25, 0.1, 1),
    upper_bounds = c(2, 1.25, 0.6, 2),
    initial_pop_constraints = TRUE,
    maxit = 100
    )

# fitting summary
summary(results)
}

}
\author{
Ladislas Nalborczyk \email{ladislas.nalborczyk@gmail.com}.
}
